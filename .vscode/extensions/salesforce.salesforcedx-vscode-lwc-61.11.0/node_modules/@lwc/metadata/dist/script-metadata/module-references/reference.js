'use strict';

var utils = require('../../shared/utils.js');
var utils$1 = require('../utils.js');
var main = require('./collectors/main.js');
var accessCheck = require('./collectors/scoped/access-check.js');
var apex = require('./collectors/scoped/apex.js');
var client = require('./collectors/scoped/client.js');
var community = require('./collectors/scoped/community.js');
var contentAssetUrl = require('./collectors/scoped/content-asset-url.js');
var customPermissions = require('./collectors/scoped/custom-permissions.js');
var designSystem = require('./collectors/scoped/design-system.js');
var featureFlag = require('./collectors/scoped/feature-flag.js');
var gate = require('./collectors/scoped/gate.js');
var i18n = require('./collectors/scoped/i18n.js');
var internal = require('./collectors/scoped/internal.js');
var label = require('./collectors/scoped/label.js');
var messageChannel = require('./collectors/scoped/message-channel.js');
var metric = require('./collectors/scoped/metric.js');
var resourceUrl = require('./collectors/scoped/resource-url.js');
var schema = require('./collectors/scoped/schema.js');
var site = require('./collectors/scoped/site.js');
var user = require('./collectors/scoped/user.js');
var userPermission = require('./collectors/scoped/user-permission.js');
var komaci = require('./collectors/scoped/komaci.js');
var webstore = require('./collectors/scoped/webstore.js');
var localModule = require('./collectors/local-module.js');
var genericModule = require('./collectors/generic-module.js');

// Copyright (c) 2022, Salesforce, Inc.,
// All rights reserved.
// For full license text, see the LICENSE.txt file
const COLLECTORS = [
    accessCheck.default,
    apex.default,
    client.default,
    community.default,
    contentAssetUrl.default,
    customPermissions.default,
    designSystem.default,
    featureFlag.default,
    gate.default,
    i18n.default,
    internal.default,
    label.default,
    messageChannel.default,
    metric.default,
    resourceUrl.default,
    schema.default,
    site.default,
    user.default,
    userPermission.default,
    localModule.default,
    genericModule.default,
    webstore.default,
    komaci.default,
];
function gatherModuleReference(node, state, result) {
    const { moduleReferenceLookup } = state;
    // The only time node.source is null is when its a ExportNamedDeclaration
    // There are checks in place to make sure gatherModuleReference() is called only when node.source is non null
    const source = node.source;
    const { value: moduleSpecifier } = source;
    let moduleReference = moduleReferenceLookup.get(moduleSpecifier);
    if (!utils.isUndefined(moduleReference)) {
        moduleReference.locations.push(utils$1.generateSourceLocation(source, utils$1.QUOTE_LENGTH, utils$1.QUOTE_LENGTH));
    }
    else {
        moduleReference = main.collectReference(COLLECTORS, node, state);
        result.moduleReferences.push(moduleReference);
        moduleReferenceLookup.set(moduleSpecifier, moduleReference);
    }
    return moduleReference;
}

exports.gatherModuleReference = gatherModuleReference;
//# sourceMappingURL=reference.js.map
