'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var eventConstruction = require('../events/event-construction.js');
var utils = require('../utils.js');

// Copyright (c) 2022, Salesforce, Inc.,
// All rights reserved.
// For full license text, see the LICENSE.txt file
function visitorFunction(state, result) {
    return function NewExpressionVisitorFunction(path) {
        const { callee } = path.node;
        if (callee.type === 'Identifier') {
            const { name } = callee;
            // process expressions like new Event()
            if (eventConstruction.VALID_EVENT_INTERFACES.has(name) && utils.isGlobalIdentifier(callee, path.scope)) {
                eventConstruction.gatherEventMetadata(path, name, result, state);
            }
        }
        if (callee.type === 'MemberExpression') {
            const { object, property } = callee;
            // process expressions like new window.Event()
            if (property.type === 'Identifier' &&
                eventConstruction.VALID_EVENT_INTERFACES.has(property.name) &&
                object.type === 'Identifier' &&
                (object.name === 'window' ||
                    object.name === 'globalThis' ||
                    object.name === 'self') &&
                utils.isGlobalIdentifier(object, path.scope)) {
                eventConstruction.gatherEventMetadata(path, property.name, result, state);
            }
        }
    };
}

exports.default = visitorFunction;
//# sourceMappingURL=new-expression-visitor.js.map
